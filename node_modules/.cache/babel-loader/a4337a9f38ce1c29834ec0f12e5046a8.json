{"ast":null,"code":"var _jsxFileName = \"/mnt/sda1/Documents/Personal_projects/chords/guess_the_chord/src/AppImg.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Timer from './Timer';\nimport c1 from './imgs/c1.png';\nimport d1 from './imgs/d1.png';\nimport e1 from './imgs/e1.png';\nimport f1 from './imgs/f1.png';\nimport g1 from './imgs/g1.png';\nimport a1 from './imgs/a1.png';\nimport b1 from './imgs/b1.png';\nimport c2 from './imgs/c2.png';\nimport d2 from './imgs/d2.png';\nimport e2 from './imgs/e2.png';\nimport f2 from './imgs/f2.png';\nimport g2 from './imgs/g2.png';\nimport a2 from './imgs/a2.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst chords = [c1, d1, e1, f1, g1, a1, b1, c2, d2, e2, f2, g2, a2];\n\nfunction generateQuestion() {\n  var curr_chord_pos = Math.floor(Math.random() * chords.length);\n  const possible_pos = [-1, 1];\n  var pos = possible_pos[Math.floor(Math.random() * possible_pos.length)];\n  var next_chord_pos = ((curr_chord_pos + pos) % chords.length + chords.length) % chords.length;\n  const qtext = `${pos === 1 ? 'Depois de' : 'Antes de'} ${chords[curr_chord_pos]}`;\n  const helper = chords.slice();\n  const random_answers = helper.sort(() => Math.random() - Math.random()).slice(0, 4);\n  const answer_pos = Math.floor(Math.random() * 4);\n\n  if (!random_answers.includes(chords[next_chord_pos])) {\n    random_answers[answer_pos] = chords[next_chord_pos];\n  }\n\n  const answerOptions = random_answers.map(x => {\n    return {\n      'answerText': x,\n      'isCorrect': x === chords[next_chord_pos]\n    };\n  });\n  const question = {\n    questionText: qtext,\n    answerOptions: answerOptions\n  };\n  return question;\n}\n\nfunction getTime(streak) {\n  return Math.max(Math.floor(-6 / 25 * streak + 20), 1);\n}\n\nexport default function App() {\n  _s();\n\n  const question = generateQuestion();\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [score, setScore] = useState(0);\n  const [streak, setStreak] = useState(0);\n  const [lastRight, setLastRight] = useState(null);\n\n  const handleAnswerOptionClick = isCorrect => {\n    if (isCorrect) {\n      setScore(score + 1);\n      setStreak(streak + 1);\n      setLastRight(true);\n    } else {\n      setStreak(0);\n      setLastRight(false);\n    }\n\n    const nextQuestion = currentQuestion + 1;\n    setCurrentQuestion(nextQuestion);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-title\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: question.questionText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"score-data feedback\",\n          children: lastRight == undefined ? 'Vamo que vamo' : lastRight ? 'Certo!' : 'Errado =('\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"score-data\",\n          children: [\"Streak \", streak]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"score-data\",\n          children: [\"Certas \", score, \" / \", currentQuestion]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"answer-section\",\n        children: question.answerOptions.map(answerOption => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleAnswerOptionClick(answerOption.isCorrect),\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            scr: answerOption.answerText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 87\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"yotIW0TPZDF0pM94HegV9FKpaQY=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/mnt/sda1/Documents/Personal_projects/chords/guess_the_chord/src/AppImg.js"],"names":["React","useState","Timer","c1","d1","e1","f1","g1","a1","b1","c2","d2","e2","f2","g2","a2","chords","generateQuestion","curr_chord_pos","Math","floor","random","length","possible_pos","pos","next_chord_pos","qtext","helper","slice","random_answers","sort","answer_pos","includes","answerOptions","map","x","question","questionText","getTime","streak","max","App","currentQuestion","setCurrentQuestion","score","setScore","setStreak","lastRight","setLastRight","handleAnswerOptionClick","isCorrect","nextQuestion","undefined","answerOption","answerText"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport Timer from './Timer';\nimport c1 from './imgs/c1.png'\nimport d1 from './imgs/d1.png'\nimport e1 from './imgs/e1.png'\nimport f1 from './imgs/f1.png'\nimport g1 from './imgs/g1.png'\nimport a1 from './imgs/a1.png'\nimport b1 from './imgs/b1.png'\nimport c2 from './imgs/c2.png'\nimport d2 from './imgs/d2.png'\nimport e2 from './imgs/e2.png'\nimport f2 from './imgs/f2.png'\nimport g2 from './imgs/g2.png'\nimport a2 from './imgs/a2.png'\n\nconst chords = [c1, d1, e1, f1, g1, a1, b1, c2, d2, e2, f2, g2, a2,];\n\nfunction generateQuestion() {\n  var curr_chord_pos = Math.floor(Math.random() * chords.length);\n  \n  const possible_pos = [-1, 1];\n  var pos = possible_pos[Math.floor(Math.random() * possible_pos.length)];\n  var next_chord_pos = (((curr_chord_pos + pos) % chords.length) + chords.length) % chords.length;\n  \n  const qtext = `${pos === 1 ? 'Depois de' : 'Antes de'} ${chords[curr_chord_pos]}`;\n  \n  const helper = chords.slice();\n  const random_answers = helper.sort(() => Math.random() - Math.random()).slice(0, 4);\n  const answer_pos = Math.floor(Math.random() * 4);\n  \n  if (!(random_answers.includes(chords[next_chord_pos]))) {\n    random_answers[answer_pos] = chords[next_chord_pos];\n  }\n\n  const answerOptions = random_answers.map(x => {\n    return {'answerText': x, 'isCorrect': (x === chords[next_chord_pos])}\n  });\n\n  const question = {\n      questionText: qtext,\n      answerOptions: answerOptions\n    }\n    \n  return question;\n}\n\nfunction getTime(streak) {\n  return Math.max(Math.floor(-6/25*streak + 20), 1);\n}\n\nexport default function App() {\n  const question = generateQuestion();\n\n\tconst [currentQuestion, setCurrentQuestion] = useState(0);\n\tconst [score, setScore] = useState(0);\n\tconst [streak, setStreak] = useState(0);\n\tconst [lastRight, setLastRight] = useState(null);\n\n\tconst handleAnswerOptionClick = (isCorrect) => {\n\t\tif (isCorrect) {\n\t\t\tsetScore(score + 1);\n\t\t\tsetStreak(streak + 1);\n\t\t\tsetLastRight(true);\n\t\t} else {\n      setStreak(0);\n      setLastRight(false);\n    }\n    \n    const nextQuestion = currentQuestion + 1;\n    setCurrentQuestion(nextQuestion);\n  }\n  \n\treturn (\n    <div className='wrapper'>\n      <div className='app'>\n          <div className='question-section'>\n            <div className='question-title'>\n              {/* <span>{question.questionText}</span> */}\n              <img src={question.questionText} />\n            </div>\n            <div className='score-data feedback'>{lastRight==undefined?'Vamo que vamo' : lastRight ? 'Certo!':'Errado =('}</div>\n            <div className='score-data'>Streak {streak}</div>\n            <div className='score-data'>Certas {score} / {currentQuestion}</div>\n          </div>\n          <div className='answer-section'>\n            {question.answerOptions.map((answerOption) => (\n              <button onClick={() => handleAnswerOptionClick(answerOption.isCorrect)}><img scr={answerOption.answerText}/></button>\n              ))}\n          </div>\n      </div>\n      \n      {/* <Timer time={getTime(streak)} question={currentQuestion}/> */}\n\t</div>\n\t);\n}"]},"metadata":{},"sourceType":"module"}