{"ast":null,"code":"var _jsxFileName = \"/mnt/sda1/Documents/Personal_projects/chords/guess_the_chord/src/App.js\",\n    _s = $RefreshSig$();\n\n// import React, { useState } from 'react';\n// import Timer from './Timer';\n// const chords = ['C', 'D', 'E', 'F', 'G', 'A', 'B'];\n// function generateQuestion() {\n//   var curr_chord_pos = Math.floor(Math.random() * chords.length);\n//   const possible_pos = [-1, 1];\n//   var pos = possible_pos[Math.floor(Math.random() * possible_pos.length)];\n//   var next_chord_pos = (((curr_chord_pos + pos) % chords.length) + chords.length) % chords.length;\n//   const qtext = `${pos === 1 ? 'Depois de' : 'Antes de'} ${chords[curr_chord_pos]}`;\n//   const helper = chords.slice();\n//   const random_answers = helper.sort(() => Math.random() - Math.random()).slice(0, 4);\n//   const answer_pos = Math.floor(Math.random() * 4);\n//   if (!(random_answers.includes(chords[next_chord_pos]))) {\n//     random_answers[answer_pos] = chords[next_chord_pos];\n//   }\n//   const answerOptions = random_answers.map(x => {\n//     return {'answerText': x, 'isCorrect': (x === chords[next_chord_pos])}\n//   });\n//   const question = {\n//     questionText: qtext,\n//     answerOptions: answerOptions\n//   }\n//   return question;\n// }\n// function getTime(streak) {\n//   return Math.max(Math.floor(-6/25*streak + 20), 1);\n// }\n// export default function App() {\n//   const question = generateQuestion();\n// \tconst [currentQuestion, setCurrentQuestion] = useState(0);\n// \tconst [score, setScore] = useState(0);\n// \tconst [streak, setStreak] = useState(0);\n// \tconst [lastRight, setLastRight] = useState(null);\n// \tconst handleAnswerOptionClick = (isCorrect) => {\n// \t\tif (isCorrect) {\n// \t\t\tsetScore(score + 1);\n// \t\t\tsetStreak(streak + 1);\n// \t\t\tsetLastRight(true);\n// \t\t} else {\n//       setStreak(0);\n//       setLastRight(false);\n//     }\n//     const nextQuestion = currentQuestion + 1;\n//     setCurrentQuestion(nextQuestion);\n//   }\n// \treturn (\n//     <div className='wrapper'>\n//       <div className='app'>\n//           <div className='question-section'>\n//             <div className='question-title'>\n//               <span>{question.questionText}</span>\n//             </div>\n//             <div className='score-data feedback'>{lastRight==undefined?'Vamo que vamo' : lastRight ? 'Certo!':'Errado =('}</div>\n//             <div className='score-data'>Streak {streak}</div>\n//             <div className='score-data'>Certas {score} / {currentQuestion}</div>\n//           </div>\n//           <div className='answer-section'>\n//             {question.answerOptions.map((answerOption) => (\n//               <button onClick={() => handleAnswerOptionClick(answerOption.isCorrect)}>{answerOption.answerText}</button>\n//               ))}\n//           </div>\n//       </div>\n//       <Timer time={getTime(streak)} question={currentQuestion}/>\n// \t\t</div>\n// \t);\n// }\nimport React, { useState } from 'react';\nimport { Switch, Router, Link, Route } from 'react-router-dom';\nimport Timer from './Timer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst chords_symbols = ['C', 'D', 'E', 'F', 'G', 'A', 'B'];\nconst chords_names = ['Do', 'Re', 'Mi', 'Fa', 'Sol', 'La', 'Si'];\n\nfunction generateQuestion(questions) {\n  var curr_chord_pos = Math.floor(Math.random() * questions.length);\n  const possible_pos = [-1, 1];\n  var pos = possible_pos[Math.floor(Math.random() * possible_pos.length)];\n  var next_chord_pos = ((curr_chord_pos + pos) % questions.length + questions.length) % questions.length;\n  const qtext = `${pos === 1 ? 'Depois de' : 'Antes de'} ${questions[curr_chord_pos]}`;\n  const helper = questions.slice();\n  const random_answers = helper.sort(() => Math.random() - Math.random()).slice(0, 4);\n  const answer_pos = Math.floor(Math.random() * 4);\n\n  if (!random_answers.includes(questions[next_chord_pos])) {\n    random_answers[answer_pos] = questions[next_chord_pos];\n  }\n\n  const answerOptions = random_answers.map(x => {\n    return {\n      'answerText': x,\n      'isCorrect': x === questions[next_chord_pos]\n    };\n  });\n  const question = {\n    questionText: qtext,\n    answerOptions: answerOptions\n  };\n  return question;\n}\n\nfunction getTime(streak) {\n  return Math.max(Math.floor(-6 / 25 * streak + 20), 1);\n}\n\nfunction Game(questions) {\n  _s();\n\n  const question = generateQuestion(questions);\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [score, setScore] = useState(0);\n  const [streak, setStreak] = useState(0);\n  const [lastRight, setLastRight] = useState(null);\n\n  const handleAnswerOptionClick = isCorrect => {\n    if (isCorrect) {\n      setScore(score + 1);\n      setStreak(streak + 1);\n      setLastRight(true);\n    } else {\n      setStreak(0);\n      setLastRight(false);\n    }\n\n    const nextQuestion = currentQuestion + 1;\n    setCurrentQuestion(nextQuestion);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-title\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: question.questionText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"score-data feedback\",\n          children: lastRight == undefined ? 'Vamo que vamo' : lastRight ? 'Certo!' : 'Errado =('\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"score-data\",\n          children: [\"Streak \", streak]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"score-data\",\n          children: [\"Certas \", score, \" / \", currentQuestion]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"answer-section\",\n        children: question.answerOptions.map(answerOption => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleAnswerOptionClick(answerOption.isCorrect),\n          children: answerOption.answerText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Timer, {\n      time: getTime(streak),\n      question: currentQuestion\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 148,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Game, \"yotIW0TPZDF0pM94HegV9FKpaQY=\");\n\n_c = Game;\n\nfunction Home() {\n  return /*#__PURE__*/_jsxDEV(\"h2\", {\n    children: \"Home\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 172,\n    columnNumber: 10\n  }, this);\n}\n\n_c2 = Home;\nexport default function App() {\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/\",\n            children: \"Home\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/symbols\",\n            children: \"Chord Symbols\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/names\",\n            children: \"Chord Names\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/symbols\",\n          children: /*#__PURE__*/_jsxDEV(Game, {\n            chords_symbols: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/names\",\n          children: /*#__PURE__*/_jsxDEV(Game, {\n            chords_names: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          children: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 177,\n    columnNumber: 5\n  }, this);\n}\n_c3 = App;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Game\");\n$RefreshReg$(_c2, \"Home\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"sources":["/mnt/sda1/Documents/Personal_projects/chords/guess_the_chord/src/App.js"],"names":["React","useState","Switch","Router","Link","Route","Timer","chords_symbols","chords_names","generateQuestion","questions","curr_chord_pos","Math","floor","random","length","possible_pos","pos","next_chord_pos","qtext","helper","slice","random_answers","sort","answer_pos","includes","answerOptions","map","x","question","questionText","getTime","streak","max","Game","currentQuestion","setCurrentQuestion","score","setScore","setStreak","lastRight","setLastRight","handleAnswerOptionClick","isCorrect","nextQuestion","undefined","answerOption","answerText","Home","App"],"mappings":"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","sourcesContent":["// import React, { useState } from 'react';\n// import Timer from './Timer';\n\n// const chords = ['C', 'D', 'E', 'F', 'G', 'A', 'B'];\n\n// function generateQuestion() {\n//   var curr_chord_pos = Math.floor(Math.random() * chords.length);\n  \n//   const possible_pos = [-1, 1];\n//   var pos = possible_pos[Math.floor(Math.random() * possible_pos.length)];\n//   var next_chord_pos = (((curr_chord_pos + pos) % chords.length) + chords.length) % chords.length;\n  \n//   const qtext = `${pos === 1 ? 'Depois de' : 'Antes de'} ${chords[curr_chord_pos]}`;\n  \n//   const helper = chords.slice();\n//   const random_answers = helper.sort(() => Math.random() - Math.random()).slice(0, 4);\n//   const answer_pos = Math.floor(Math.random() * 4);\n  \n//   if (!(random_answers.includes(chords[next_chord_pos]))) {\n//     random_answers[answer_pos] = chords[next_chord_pos];\n//   }\n\n//   const answerOptions = random_answers.map(x => {\n//     return {'answerText': x, 'isCorrect': (x === chords[next_chord_pos])}\n//   });\n\n//   const question = {\n//     questionText: qtext,\n//     answerOptions: answerOptions\n//   }\n  \n//   return question;\n// }\n\n// function getTime(streak) {\n//   return Math.max(Math.floor(-6/25*streak + 20), 1);\n// }\n\n// export default function App() {\n//   const question = generateQuestion();\n\n// \tconst [currentQuestion, setCurrentQuestion] = useState(0);\n// \tconst [score, setScore] = useState(0);\n// \tconst [streak, setStreak] = useState(0);\n// \tconst [lastRight, setLastRight] = useState(null);\n\n// \tconst handleAnswerOptionClick = (isCorrect) => {\n// \t\tif (isCorrect) {\n// \t\t\tsetScore(score + 1);\n// \t\t\tsetStreak(streak + 1);\n// \t\t\tsetLastRight(true);\n// \t\t} else {\n//       setStreak(0);\n//       setLastRight(false);\n//     }\n    \n//     const nextQuestion = currentQuestion + 1;\n//     setCurrentQuestion(nextQuestion);\n//   }\n  \n// \treturn (\n//     <div className='wrapper'>\n//       <div className='app'>\n//           <div className='question-section'>\n//             <div className='question-title'>\n//               <span>{question.questionText}</span>\n//             </div>\n//             <div className='score-data feedback'>{lastRight==undefined?'Vamo que vamo' : lastRight ? 'Certo!':'Errado =('}</div>\n//             <div className='score-data'>Streak {streak}</div>\n//             <div className='score-data'>Certas {score} / {currentQuestion}</div>\n//           </div>\n//           <div className='answer-section'>\n//             {question.answerOptions.map((answerOption) => (\n//               <button onClick={() => handleAnswerOptionClick(answerOption.isCorrect)}>{answerOption.answerText}</button>\n//               ))}\n//           </div>\n//       </div>\n      \n//       <Timer time={getTime(streak)} question={currentQuestion}/>\n// \t\t</div>\n// \t);\n// }\n\nimport React, { useState } from 'react';\nimport { Switch, Router, Link, Route } from 'react-router-dom'\n\nimport Timer from './Timer';\n\nconst chords_symbols = ['C', 'D', 'E', 'F', 'G', 'A', 'B'];\nconst chords_names = ['Do', 'Re', 'Mi', 'Fa', 'Sol', 'La', 'Si'];\n\nfunction generateQuestion(questions) {\n  var curr_chord_pos = Math.floor(Math.random() * questions.length);\n  \n  const possible_pos = [-1, 1];\n  var pos = possible_pos[Math.floor(Math.random() * possible_pos.length)];\n  var next_chord_pos = (((curr_chord_pos + pos) % questions.length) + questions.length) % questions.length;\n  \n  const qtext = `${pos === 1 ? 'Depois de' : 'Antes de'} ${questions[curr_chord_pos]}`;\n  \n  const helper = questions.slice();\n  const random_answers = helper.sort(() => Math.random() - Math.random()).slice(0, 4);\n  const answer_pos = Math.floor(Math.random() * 4);\n  \n  if (!(random_answers.includes(questions[next_chord_pos]))) {\n    random_answers[answer_pos] = questions[next_chord_pos];\n  }\n\n  const answerOptions = random_answers.map(x => {\n    return {'answerText': x, 'isCorrect': (x === questions[next_chord_pos])}\n  });\n\n  const question = {\n    questionText: qtext,\n    answerOptions: answerOptions\n  }\n  \n  return question;\n}\n\nfunction getTime(streak) {\n  return Math.max(Math.floor(-6/25*streak + 20), 1);\n}\n\nfunction Game(questions) {\n  const question = generateQuestion(questions);\n  \n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [score, setScore] = useState(0);\n  const [streak, setStreak] = useState(0);\n  const [lastRight, setLastRight] = useState(null);\n  \n  const handleAnswerOptionClick = (isCorrect) => {\n    if (isCorrect) {\n      setScore(score + 1);\n      setStreak(streak + 1);\n      setLastRight(true);\n    } else {\n      setStreak(0);\n      setLastRight(false);\n    }\n    \n    const nextQuestion = currentQuestion + 1;\n    setCurrentQuestion(nextQuestion);\n  }\n  \n  return (\n    <div className='wrapper'>\n      <div className='app'>\n          <div className='question-section'>\n            <div className='question-title'>\n              <span>{question.questionText}</span>\n            </div>\n            <br></br>\n            <div className='score-data feedback'>{lastRight==undefined?'Vamo que vamo' : lastRight ? 'Certo!':'Errado =('}</div>\n            <div className='score-data'>Streak {streak}</div>\n            <div className='score-data'>Certas {score} / {currentQuestion}</div>\n          </div>\n          <div className='answer-section'>\n            {question.answerOptions.map((answerOption) => (\n              <button onClick={() => handleAnswerOptionClick(answerOption.isCorrect)}>{answerOption.answerText}</button>\n              ))}\n          </div>\n      </div>\n      \n      <Timer time={getTime(streak)} question={currentQuestion}/>\n    </div>\n  );\n}\n\nfunction Home() {\n  return <h2>Home</h2>;\n}\n\nexport default function App() {\n  return (\n    <Router>\n      <div>\n        <ul>\n          <li>\n            <Link to=\"/\">Home</Link>\n          </li>\n          <li>\n            <Link to=\"/symbols\">Chord Symbols</Link>\n          </li>\n          <li>\n            <Link to=\"/names\">Chord Names</Link>\n          </li>\n        </ul>\n\n        <Switch>\n          <Route path=\"/symbols\">\n            <Game chords_symbols/>\n          </Route>\n          <Route path=\"/names\">\n            <Game chords_names/>\n          </Route>\n          <Route path=\"/\">\n            <Home />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}"]},"metadata":{},"sourceType":"module"}