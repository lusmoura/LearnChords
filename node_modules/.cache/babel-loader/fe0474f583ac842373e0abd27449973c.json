{"ast":null,"code":"var _jsxFileName = \"/mnt/sda1/Documents/Personal_projects/chords/giter/src/Timer.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Timer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      seconds: this.props.time,\n      question: this.props.question\n    };\n  }\n\n  componentDidMount() {\n    const seconds = this.state.seconds;\n    this.myInterval = setInterval(() => {\n      if (this.props.question !== this.state.question) {\n        this.setState(() => ({\n          seconds: this.props.time,\n          question: this.props.question\n        }));\n      }\n\n      if (seconds === 0) {\n        clearInterval(this.myInterval);\n      } else {\n        this.setState(({\n          seconds\n        }) => ({\n          seconds: seconds - 0.01\n        }));\n      }\n    }, 10);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.myInterval);\n  }\n\n  render() {\n    //console.log(this.state.question, this.props.question)\n    const seconds = this.state.seconds;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: seconds <= 0 ? /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"timer-text\",\n        children: \"ACABOU\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"timer-text\",\n        children: [\"Tempo restante: \", Math.ceil(seconds)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/mnt/sda1/Documents/Personal_projects/chords/giter/src/Timer.js"],"names":["React","Component","Timer","constructor","props","state","seconds","time","question","componentDidMount","myInterval","setInterval","setState","clearInterval","componentWillUnmount","render","Math","ceil"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAGA,eAAe,MAAMC,KAAN,SAAoBD,SAApB,CAA8B;AACzCE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAACC,MAAAA,OAAO,EAAE,KAAKF,KAAL,CAAWG,IAArB;AAA2BC,MAAAA,QAAQ,EAAE,KAAKJ,KAAL,CAAWI;AAAhD,KAAb;AACH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,UAAMH,OAAO,GAAG,KAAKD,KAAL,CAAWC,OAA3B;AACA,SAAKI,UAAL,GAAkBC,WAAW,CAAC,MAAM;AAChC,UAAI,KAAKP,KAAL,CAAWI,QAAX,KAAwB,KAAKH,KAAL,CAAWG,QAAvC,EAAiD;AAC7C,aAAKI,QAAL,CAAc,OAAO;AACjBN,UAAAA,OAAO,EAAE,KAAKF,KAAL,CAAWG,IADH;AAEjBC,UAAAA,QAAQ,EAAE,KAAKJ,KAAL,CAAWI;AAFJ,SAAP,CAAd;AAIH;;AAED,UAAIF,OAAO,KAAK,CAAhB,EAAmB;AACfO,QAAAA,aAAa,CAAC,KAAKH,UAAN,CAAb;AACH,OAFD,MAEO;AACH,aAAKE,QAAL,CAAc,CAAC;AAAEN,UAAAA;AAAF,SAAD,MAAkB;AAC5BA,UAAAA,OAAO,EAAEA,OAAO,GAAG;AADS,SAAlB,CAAd;AAGH;AACJ,KAf4B,EAe1B,EAf0B,CAA7B;AAgBH;;AAEDQ,EAAAA,oBAAoB,GAAG;AACnBD,IAAAA,aAAa,CAAC,KAAKH,UAAN,CAAb;AACH;;AAEDK,EAAAA,MAAM,GAAG;AACL;AACA,UAAMT,OAAO,GAAG,KAAKD,KAAL,CAAWC,OAA3B;AAEA,wBACA;AAAA,gBACKA,OAAO,IAAI,CAAX,gBACG;AAAI,QAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADH,gBAEG;AAAI,QAAA,SAAS,EAAC,YAAd;AAAA,uCAA4CU,IAAI,CAACC,IAAL,CAAUX,OAAV,CAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAHR;AAAA;AAAA;AAAA;AAAA,YADA;AAQH;;AA1CwC","sourcesContent":["import React, { Component } from 'react'\n\n\nexport default class Timer extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {seconds: this.props.time, question: this.props.question};\n    }\n    \n    componentDidMount() {\n        const seconds = this.state.seconds;\n        this.myInterval = setInterval(() => {\n            if (this.props.question !== this.state.question) {\n                this.setState(() => ({\n                    seconds: this.props.time,\n                    question: this.props.question\n                }));\n            }\n\n            if (seconds === 0) {\n                clearInterval(this.myInterval)\n            } else {\n                this.setState(({ seconds }) => ({\n                    seconds: seconds - 0.01\n                }))\n            }\n        }, 10);\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.myInterval);\n    }\n\n    render() {\n        //console.log(this.state.question, this.props.question)\n        const seconds = this.state.seconds;\n\n        return (\n        <div>\n            {seconds <= 0 ? \n                <h1 className='timer-text'>ACABOU</h1> :\n                <h1 className='timer-text'>Tempo restante: {Math.ceil(seconds)}</h1>\n            }\n        </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}